"""initial

Revision ID: a01b6041eff6
Revises: 
Create Date: 2023-12-11 12:31:42.553887

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a01b6041eff6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('teacher')
    op.drop_table('teachercourse')
    op.drop_table('studentcourse')
    op.drop_table('student')
    op.drop_table('course')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('course',
    sa.Column('course_id', sa.INTEGER(), server_default=sa.text("nextval('course_course_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('course_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('course_id', name='course_pkey'),
    sa.UniqueConstraint('course_name', name='course_course_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('student',
    sa.Column('student_id', sa.INTEGER(), server_default=sa.text("nextval('student_student_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('student_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('student_email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('year_enrolled', sa.DATE(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('student_id', name='student_pkey'),
    sa.UniqueConstraint('student_email', name='student_student_email_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('studentcourse',
    sa.Column('student_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('course_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.course_id'], name='studentcourse_course_id_fkey'),
    sa.ForeignKeyConstraint(['student_id'], ['student.student_id'], name='studentcourse_student_id_fkey'),
    sa.PrimaryKeyConstraint('student_id', 'course_id', name='studentcourse_pkey')
    )
    op.create_table('teachercourse',
    sa.Column('teacher_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('course_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.course_id'], name='teachercourse_course_id_fkey'),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher.teacher_id'], name='teachercourse_teacher_id_fkey'),
    sa.PrimaryKeyConstraint('teacher_id', 'course_id', name='teachercourse_pkey')
    )
    op.create_table('teacher',
    sa.Column('teacher_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('teacher_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('teacher_email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('teacher_id', name='teacher_pkey'),
    sa.UniqueConstraint('teacher_email', name='teacher_teacher_email_key')
    )
    # ### end Alembic commands ###
